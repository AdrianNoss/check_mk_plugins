#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# v1.0 - initial release:
# Author: Davide Del Grande <davide.delgrande _ lanewan.it> / <delgrande.davide _ gmail.com>
# Based on original apc_inrow_* plugin in Check_MK 1.2.8p13
# This plugin supports APC InRow Gen2 RD, which has different OIDs
# http://www.oidview.com/mibs/318/PowerNet-MIB.html


# .1.3.6.1.4.1.318.1.1.13.4.5.2.1.7  -->  PowerNet-MIB::airIRRG2RDT2StatusRackInletTempMetric.0
# .1.3.6.1.4.1.318.1.1.13.4.5.2.1.9  -->  PowerNet-MIB::airIRRG2RDT2StatusSupplyAirTempMetric.0
# .1.3.6.1.4.1.318.1.1.13.4.5.2.1.11 -->  PowerNet-MIB::airIRRG2RDT2StatusReturnAirTempMetric.0
# .1.3.6.1.4.1.318.1.1.13.4.5.2.1.13 -->  PowerNet-MIB::airIRRG2RDT2StatusSuctionTempMetric.0


factory_settings["apc_inrowg2rd_temp_default_levels"] = {
    "levels": ( 30, 35 )
}


def parse_apc_inrowg2rd_temp(info):
    parsed = {}
    if info:
        for what, what_item in zip(info[0],
            ["Rack Inlet", "Supply Air", "Return Air",
             "Suction Temperature"
            ]):
            if what not in [ "", "-1" ]:
                parsed.setdefault(what_item, float(what) / 10)

    return parsed


def inventory_apc_inrowg2rd_temp(parsed):
    for key in parsed:
        yield key, {}


def check_apc_inrowg2rd_temp(item, params, parsed):
    if item in parsed:
        return check_temperature(parsed[item], params, "apc_inrowg2rd_temp_%s" % item)


check_info["apc_inrowg2rd_temp"] = {
    "parse_function"          : parse_apc_inrowg2rd_temp,
    "inventory_function"      : inventory_apc_inrowg2rd_temp,
    "check_function"          : check_apc_inrowg2rd_temp,
    "service_description"     : "Temperature %s",
    "has_perfdata"            : True,
    "snmp_info"               : (".1.3.6.1.4.1.318.1.1.13.4.5.2.1", [
                                    "7",        # airIRRG2RDT2StatusRackInletTempMetric
                                    "9",        # airIRRG2RDT2StatusSupplyAirTempMetric
                                    "11",       # airIRRG2RDT2StatusReturnAirTempMetric
                                    "13",       # airIRRG2RDT2StatusSuctionTempMetric
                                ]),
    "snmp_scan_function"      : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.318.1.3.14.8"),
    "group"                   : "temperature",
    "includes"                : [ "temperature.include" ],
    "default_levels_variable" : "apc_inrowrg2rd_temp_default_levels"
}
